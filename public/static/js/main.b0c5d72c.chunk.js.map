{"version":3,"sources":["components/Loader.js","images/header/Logo_vector.svg","components/Header.js","components/Card.js","context/CurrentUserContext.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/ImagePopup.js","utils/api.js","utils/utils.js","components/App.js","reportWebVitals.js","index.js"],"names":["Loader","className","memo","Header","href","src","logo","alt","Card","props","isLiked","card","likes","some","item","_id","userId","link","name","onClick","onCardClick","onMouseMove","handleTipOpen","onMouseLeave","handleTipClose","type","onCardLike","length","owner","onCardDelete","CurrentUserContext","createContext","Main","currentUser","useContext","useState","display","top","left","tipStyle","setTipStyle","tipContent","setTipContent","clientX","clientY","target","scrollWidth","clientWidth","textContent","window","pageYOffset","pageXOffset","prevState","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","style","textAlign","fontSize","Footer","Date","getFullYear","PopupWithForm","isOpen","onMouseDown","currentTarget","onClose","id","onSubmit","noValidate","title","children","disabled","isDisabled","dangerouslySetInnerHTML","__html","button","AddPlacePopup","inputValue","setInputValue","handleInputChange","value","handleChange","useEffect","submitButton","event","preventDefault","placeholder","minLength","maxLength","pattern","required","onChange","errors","EditAvatarPopup","inputRef","useRef","current","onUpdateAvatar","ref","EditProfilePopup","onUpdateUser","person","ImagePopup","currentCard","api","baseUrl","headers","this","_baseUrl","_headers","endPoint","method","body","fetch","JSON","stringify","then","res","ok","json","Promise","reject","status","_request","newData","newAvatar","newCard","cardId","authorization","defaultSubmitTitle","defaultSubmitButtons","defaultValidationMessage","App","isAppLoading","setIsAppLoading","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","all","getUserData","getInitialCards","data","catch","err","alert","finally","saveButtonTitle","setSaveButtonTitle","addButtonTitle","setAddButtonTitle","confirmButtonTitle","setConfirmButtonTitle","isSubmitDisabled","setIsSubmitDisabled","validationMessage","setValidationMessage","inputsRef","Set","input","setCustomValidity","validity","patternMismatch","setCustomErrorMessages","add","form","checkValidity","idRef","handleEscClose","key","closeAllPopups","addListener","document","onkeydown","forEach","clear","Provider","deleteLike","newCards","addLike","addCard","newUser","updateUserData","updateAvatar","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0c5d72c.chunk.js","sourcesContent":["import { memo } from \"react\"\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"page__loader\">\r\n      Mesto\r\n      <span className =\"dot dot_loader\">.</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Loader)\r\n","export default __webpack_public_path__ + \"static/media/Logo_vector.c2821b38.svg\";","import { memo } from 'react';\r\nimport logo from '../images/header/Logo_vector.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header page__section\">\r\n      <a href=\"#\">\r\n        <img src={logo} alt=\"Логотип\" className=\"header__logo\" />\r\n      </a>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default memo(Header)\r\n","import { memo } from \"react\";\r\n\r\nfunction Card(props) {\r\n\r\n  const isLiked = props.card.likes.some(item => item._id === props.userId);\r\n  \r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card._id, isLiked)\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card._id)\r\n  }\r\n\r\n  return (\r\n    <article className=\"element\">\r\n      <img\r\n        src={props.card.link}\r\n        alt={props.card.name}\r\n        className=\"element__image\"\r\n        name=\"image-button\"\r\n        onClick={handleClick}\r\n      />\r\n      <div className=\"element__wrapper\">\r\n        <h2 className=\"element__title\" onMouseMove={props.handleTipOpen} onMouseLeave={props.handleTipClose}>\r\n          {props.card.name}\r\n        </h2>\r\n        <div>\r\n          <button\r\n            className={`element__button element__button_type_like-button ${isLiked ? 'element__button_type_black-like': ''}`}\r\n            type=\"button\"\r\n            name=\"like-button\"\r\n            onClick={handleLikeClick}\r\n          />\r\n          <span className=\"element__likes\">{props.card.likes.length}</span>\r\n        </div>\r\n      </div>\r\n      {props.card.owner._id === props.userId &&\r\n        (\r\n          <button\r\n            className=\"element__button element__button_type_trash-button\"\r\n            type=\"button\"\r\n            name=\"trash-button\"\r\n            onClick={handleDeleteClick}\r\n          />\r\n        )\r\n      }\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default memo(Card)\r\n","import { createContext } from 'react';\r\n\r\nexport const CurrentUserContext = createContext();\r\n","import { memo, useState, useContext } from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const [tipStyle, setTipStyle] = useState({ display: 'none', top: '', left: '' });\r\n  const [tipContent, setTipContent] = useState('');\r\n\r\n  function handleTipOpen({ clientX, clientY, target: { scrollWidth, clientWidth, textContent } }) {\r\n    if (scrollWidth > clientWidth) {\r\n      setTipStyle({\r\n        display: 'block',\r\n        top: `${clientY + window.pageYOffset + 10}px`,\r\n        left: `${clientX + window.pageXOffset + 10}px`,\r\n      })\r\n      setTipContent(textContent)\r\n    }\r\n  }\r\n\r\n  function handleTipClose() {\r\n    setTipStyle(prevState => ({ ...prevState, display: 'none' }))\r\n  }\r\n\r\n  return (\r\n    <main className=\"page__section\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__container\">\r\n          <img\r\n            src={currentUser.avatar}\r\n            className=\"profile__image\"\r\n            name=\"avatar-button\"\r\n            alt=\"Аватар\"\r\n            onClick={props.onEditAvatar}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"profile__wrapper\">\r\n          <h1 className=\"profile__title\" onMouseMove={handleTipOpen} onMouseLeave={handleTipClose}>\r\n            {currentUser.name}\r\n          </h1>\r\n          <button\r\n            className=\"profile__button profile__button_type_edit-button\"\r\n            type=\"button\"\r\n            name=\"edit-button\"\r\n            onClick={props.onEditProfile}\r\n          />\r\n          <p className=\"profile__subtitle\" onMouseMove={handleTipOpen} onMouseLeave={handleTipClose}>\r\n            {currentUser.about}\r\n          </p>\r\n        </div>\r\n\r\n        <button\r\n          className=\"profile__button profile__button_type_add-button\"\r\n          type=\"button\"\r\n          name=\"add-button\"\r\n          onClick={props.onAddPlace}\r\n        />\r\n      </section>\r\n\r\n      {props.cards.length\r\n          ? (\r\n            <section className=\"elements\">\r\n              {props.cards.map(card => (\r\n                <Card\r\n                  key={card._id}\r\n                  card={card}\r\n                  userId={currentUser._id}\r\n                  onCardClick={props.onCardClick}\r\n                  onCardLike={props.onCardLike}\r\n                  onCardDelete={props.onCardDelete}\r\n                  handleTipOpen={handleTipOpen}\r\n                  handleTipClose={handleTipClose}\r\n                />\r\n              ))}\r\n            </section>\r\n            )\r\n          : <div style={{ textAlign: 'center', fontSize: '20px' }}>Список пуст</div>\r\n      }\r\n\r\n      <span className=\"tip\" style={tipStyle}>{tipContent}</span>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default memo(Main)\r\n","import { memo } from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer page__section\">\r\n      <p className=\"footer__copyright\">{`© ${new Date().getFullYear()} Mesto Russia`}</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default memo(Footer)\r\n","import { memo } from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n  \r\n  function handleOverlayClose({ target, currentTarget }) {\r\n    target === currentTarget && props.onClose()\r\n  }\r\n  \r\n  return (\r\n    <section\r\n      className={`popup ${props.isOpen ? 'popup_opened' : ''}`}\r\n      onMouseDown={handleOverlayClose}\r\n    >\r\n      <form className=\"popup__container\" id={props.name} name={props.name} onSubmit={props.onSubmit} noValidate>\r\n        <h2 className=\"popup__title\">{props.title}</h2>\r\n        {props.children}\r\n        <button\r\n          className=\"popup__button popup__button_type_submit-button\"\r\n          type=\"submit\"\r\n          disabled={props.isDisabled}\r\n          dangerouslySetInnerHTML={{__html: props.button}}\r\n        />\r\n        <button\r\n          className=\"popup__button popup__button_type_close-button\"\r\n          type=\"button\"\r\n          name=\"close-button\"\r\n          onClick={props.onClose}\r\n        />\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default memo(PopupWithForm)\r\n","import { memo, useState, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {  \r\n  \r\n  const [inputValue, setInputValue] = useState({});\r\n  \r\n  useEffect(\r\n    () => props.isOpen && setInputValue({ name: '', link: '' }),\r\n    [props.isOpen]\r\n  )\r\n\r\n  function handleInputChange({ target }) {\r\n    setInputValue(prevState => ({ ...prevState, [target.name]: target.value }));\r\n    props.handleChange(target)\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.onAddPlace(inputValue)\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title='Новое место'\r\n      name='add-form'\r\n      button={props.submitButton}\r\n      isDisabled={props.isDisabled}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"popup__wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"popup__input\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          placeholder=\"Название\"\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          pattern=\"^[^\\s]+(\\s.*)?$\"\r\n          required\r\n          value={inputValue.name || ''}\r\n          onChange={handleInputChange}\r\n        />\r\n        <span className=\"popup__input-error\">{props.errors.name}</span>\r\n        <input\r\n          type=\"url\"\r\n          className=\"popup__input\"\r\n          id=\"link\"\r\n          name=\"link\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          pattern=\"^[^\\s]+(\\s.*)?$\"\r\n          required\r\n          value={inputValue.link || ''}\r\n          onChange={handleInputChange}\r\n        />\r\n        <span className=\"popup__input-error\">{props.errors.link}</span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  )\r\n\r\n}\r\n\r\nexport default memo(AddPlacePopup)\r\n","import { memo, useEffect, useContext, useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  \r\n  const inputRef = useRef();\r\n  \r\n  const currentUser = useContext(CurrentUserContext);\r\n  useEffect(\r\n    () => props.isOpen && (inputRef.current.value = currentUser.avatar),\r\n    [props.isOpen]\r\n  )\r\n\r\n  function handleInputChange({ target }) {\r\n    props.handleChange(target)\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.onUpdateAvatar({ avatar: inputRef.current.value })\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title='Обновить аватар'\r\n      name='avatar-form'\r\n      button={props.submitButton}\r\n      isDisabled={props.isDisabled}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"popup__wrapper\">\r\n        <input\r\n          ref={inputRef}\r\n          type=\"url\"\r\n          className=\"popup__input\"\r\n          id=\"avatar-link\"\r\n          name=\"avatar\"\r\n          placeholder=\"Ссылка на аватар\"\r\n          pattern=\"^[^\\s]+(\\s.*)?$\"\r\n          required\r\n          onChange={handleInputChange}\r\n        />\r\n        <span className=\"popup__input-error\">{props.errors['avatar-link']}</span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default memo(EditAvatarPopup)\r\n","import { memo, useState, useEffect, useContext } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  \r\n  const [inputValue, setInputValue] = useState({});\r\n  \r\n  const currentUser = useContext(CurrentUserContext);\r\n  useEffect(\r\n    () => props.isOpen && setInputValue({ name: currentUser.name, about: currentUser.about }),\r\n    [props.isOpen]\r\n  )\r\n\r\n  function handleInputChange({ target }) {\r\n    setInputValue(prevState => ({ ...prevState, [target.name]: target.value }));\r\n    props.handleChange(target)\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.onUpdateUser(inputValue)\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title='Редактировать профиль'\r\n      name='edit-form'\r\n      button={props.submitButton}\r\n      isDisabled={props.isDisabled}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"popup__wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"popup__input\"\r\n          id=\"person\"\r\n          name=\"name\"\r\n          placeholder=\"Имя\"\r\n          minLength=\"2\"\r\n          maxLength=\"40\"\r\n          pattern=\"^[^\\s]+(\\s.*)?$\"\r\n          required\r\n          value={inputValue.name || ''}\r\n          onChange={handleInputChange}\r\n        />\r\n        <span className=\"popup__input-error\">{props.errors.person}</span>\r\n        <input\r\n          type=\"text\"\r\n          className=\"popup__input\"\r\n          id=\"about\"\r\n          name=\"about\"\r\n          placeholder=\"О себе\"\r\n          minLength=\"2\"\r\n          maxLength=\"200\"\r\n          pattern=\"^[^\\s]+(\\s.*)?$\"\r\n          required\r\n          value={inputValue.about || ''}\r\n          onChange={handleInputChange}\r\n        />\r\n        <span className=\"popup__input-error\">{props.errors.about}</span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default memo(EditProfilePopup)\r\n","import { memo } from \"react\";\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n\r\n  const {isOpen, currentCard} = card;\r\n\r\n  function handleOverlayClose({ target, currentTarget }) {\r\n    target === currentTarget && onClose()\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={`popup ${isOpen ? 'popup_opened' : ''}`}\r\n      onMouseDown={handleOverlayClose}\r\n    >\r\n      <figure className=\"popup__container popup__container_type_image\">\r\n        <img src={currentCard && currentCard.link} alt={currentCard && currentCard.name} className=\"popup__image\" />\r\n        <figcaption className=\"popup__caption\">{currentCard && currentCard.name}</figcaption>\r\n        <button\r\n          className=\"popup__button popup__button_type_image-button\"\r\n          type=\"button\"\r\n          name=\"close-button\"\r\n          onClick={onClose}\r\n        />\r\n      </figure>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default memo(ImagePopup)\r\n","class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers\r\n  }\r\n\r\n  _request(endPoint, method, body) {\r\n    return fetch(\r\n      `${this._baseUrl}/${endPoint}`,\r\n      {\r\n        method: method,\r\n        headers: this._headers,\r\n        body:JSON.stringify(body)\r\n      }\r\n    ).then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`))\r\n  }\r\n\r\n\r\n  getInitialCards() {\r\n    return this._request('cards')\r\n  }\r\n\r\n  getUserData() {\r\n    return this._request('users/me')\r\n  }\r\n\r\n  updateUserData(newData) {\r\n    return this._request('users/me', 'PATCH', newData)\r\n  }\r\n\r\n  updateAvatar(newAvatar) {\r\n    return this._request('users/me/avatar', 'PATCH', newAvatar)\r\n  }\r\n\r\n  addCard(newCard) {\r\n    return this._request('cards', 'POST', newCard)\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return this._request(`cards/${cardId}`, 'DELETE')\r\n  }\r\n\r\n  addLike(cardId) {\r\n    return this._request(`cards/likes/${cardId}`, 'PUT')\r\n  }\r\n\r\n  deleteLike(cardId) {\r\n    return this._request(`cards/likes/${cardId}`, 'DELETE')\r\n  }\r\n}\r\n\r\nexport const api = new Api(\r\n  {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-18',\r\n    headers: {\r\n      authorization: '934c46c5-5482-4ae2-9c3d-a386fe87103e',\r\n      'Content-Type': 'application/json; charset=utf-8'\r\n    }\r\n  }\r\n)\r\n","export function setCustomErrorMessages(input) {\r\n  input.setCustomValidity('');\r\n  if (input.validity.patternMismatch) {\r\n    input.setCustomValidity('Текст не должен начинаться с пробела и содержать одни пробелы');\r\n  }\r\n}\r\n\r\nexport const defaultSubmitTitle = {\r\n  save: 'Сохранить',\r\n  add: 'Добавить',\r\n  confirm: 'Да'\r\n}\r\n\r\nexport const defaultSubmitButtons = {\r\n  'edit-form': false,\r\n  'add-form': true,\r\n  'avatar-form': false,\r\n}\r\n\r\nexport const defaultValidationMessage = {\r\n  'person': '',\r\n  'about': '',\r\n  'avatar-link': '',\r\n  'name': '',\r\n  'link': ''\r\n}\r\n","import { useState, useEffect, useRef } from 'react';\nimport Loader from './Loader'\nimport Header from './Header'\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/api';\nimport { CurrentUserContext } from '../context/CurrentUserContext';\nimport { setCustomErrorMessages, defaultValidationMessage, defaultSubmitButtons, defaultSubmitTitle } from '../utils/utils';\n\nfunction App() {\n\n  const [isAppLoading, setIsAppLoading] = useState(true);\n\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n\n  const [selectedCard, setSelectedCard] = useState({ isOpen: false, currentCard: {} });\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    Promise.all([\n      api.getUserData(),\n      api.getInitialCards()\n    ]).then(([data, cards ]) => {\n        setCurrentUser(data);\n        setCards(cards)\n      })\n      .catch(err => alert(err))\n      .finally(() => setIsAppLoading(false))\n  }, [])\n\n  const [saveButtonTitle, setSaveButtonTitle] = useState(defaultSubmitTitle.save);\n  const [addButtonTitle, setAddButtonTitle] = useState(defaultSubmitTitle.add);\n  const [confirmButtonTitle, setConfirmButtonTitle] = useState(defaultSubmitTitle.confirm );\n\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(defaultSubmitButtons);\n  const [validationMessage, setValidationMessage] = useState(defaultValidationMessage);\n  \n  const inputsRef = useRef(new Set());\n\n  function handleChange(input) {\n    setCustomErrorMessages(input);\n\n    inputsRef.current.add(input);\n\n    const isDisabled = !input.form.checkValidity();\n\n    setIsSubmitDisabled(prevState => ({ ...prevState, [input.form.id]: isDisabled }));\n    setValidationMessage(prevState => ({ ...prevState, [input.id]: input.validationMessage }));\n  }\n\n  function handleUpdateUser(newUser) {\n    setSaveButtonTitle('Сохранение <span class =\"dot\">.</span>')\n\n    api.updateUserData(newUser)\n      .then(data => setCurrentUser(data))\n      .catch(err => alert(err))\n      .finally(() => {\n        setSaveButtonTitle(defaultSubmitTitle.save)\n        closeAllPopups()\n      })\n  }\n\n  function handleUpdateAvatar(newAvatar) {\n    setSaveButtonTitle('Сохранение <span class =\"dot\">.</span>')\n\n    api.updateAvatar(newAvatar)\n      .then(data => setCurrentUser(prevState => ({ ...prevState, avatar: data.avatar })))\n      .catch(err => alert(err))\n      .finally(() => {\n        setSaveButtonTitle(defaultSubmitTitle.save)\n        closeAllPopups()\n      })\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    setAddButtonTitle('Добавление <span class =\"dot\">.</span>')\n\n    api.addCard(newCard)\n      .then(card => setCards([ card, ...cards ]))\n      .catch(err => alert(err))\n      .finally(() => {\n        setAddButtonTitle(defaultSubmitTitle.add)\n        closeAllPopups()\n      })\n  }\n\n  const idRef = useRef();\n\n  function handleCardDelete(event) {\n    event.preventDefault();\n\n    setConfirmButtonTitle('Удаление <span class =\"dot\">.</span>')\n\n    api.deleteCard(idRef.current)\n      .then(() => {\n        const newCards = cards.filter(item => item._id !== idRef.current);\n        setCards(newCards)\n      })\n      .catch(err => alert(err))\n      .finally(() => {\n        setConfirmButtonTitle(defaultSubmitTitle.confirm)\n        closeAllPopups()\n      })\n  }\n\n  function handleCardLike(cardId, isLiked) {\n    if (isLiked) {\n      api.deleteLike(cardId)\n        .then(card => {\n          if (card.likes.some(item => item._id !== currentUser._id) || !card.likes.length) {\n            const newCards = cards.map(item => item._id === cardId ? card : item);\n            setCards(newCards)\n          }\n        })\n        .catch(err => alert(err))\n    } else {\n      api.addLike(cardId)\n        .then(card => {\n          if (card.likes.some(item => item._id === currentUser._id)) {\n            const newCards = cards.map(item => item._id === cardId ? card : item);\n            setCards(newCards)\n          }\n        })\n        .catch(err => alert(err))\n    }\n  }\n\n  function handleEscClose({ key }) {\n    key === 'Escape' && closeAllPopups()\n  }\n\n  function addListener() {\n    document.onkeydown = handleEscClose;\n  }\n\n  function handleAddPlaceClick() {\n    addListener();\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditProfileClick() {\n    addListener();\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    addListener();\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function handleCardClick(card) {\n    addListener();\n    setSelectedCard({ isOpen: true, currentCard: card })\n  }\n  \n  function handleConfirmClick(cardId) {\n    idRef.current = cardId;\n    addListener();\n    setIsConfirmPopupOpen(true)\n  }\n  \n  function closeAllPopups() {\n    document.onkeydown = '';\n\n    setIsSubmitDisabled(defaultSubmitButtons);\n    setValidationMessage(defaultValidationMessage);\n    inputsRef.current.forEach(input => input.setCustomValidity(''));\n    inputsRef.current.clear();\n\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(prevState => ({ ...prevState, isOpen: false }));\n    setIsConfirmPopupOpen(false)\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        {isAppLoading && <Loader />}\n        <Header />\n        <Main\n          cards={cards}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleConfirmClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditProfile={handleEditProfileClick}\n          onEditAvatar={handleEditAvatarClick}\n        />\n        <Footer />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          isDisabled={isSubmitDisabled['add-form']}\n          submitButton={addButtonTitle}\n          errors={validationMessage}\n          onClose={closeAllPopups}\n          handleChange={handleChange}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          isDisabled={isSubmitDisabled['edit-form']}\n          submitButton={saveButtonTitle}\n          errors={validationMessage}\n          onClose={closeAllPopups}\n          handleChange={handleChange}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          isDisabled={isSubmitDisabled['avatar-form']}\n          submitButton={saveButtonTitle}\n          errors={validationMessage}\n          onClose={closeAllPopups}\n          handleChange={handleChange}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <PopupWithForm\n          title='Вы уверены'\n          name='confirm-form'\n          button={confirmButtonTitle}\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleCardDelete}\n        />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}